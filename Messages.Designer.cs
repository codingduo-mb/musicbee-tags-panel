//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MusicBeePlugin {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MusicBeePlugin.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About Tags-Panel Plugin.
        /// </summary>
        internal static string AboutCaption {
            get {
                return ResourceManager.GetString("AboutCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tags-Panel Plugin\nVersion {0}\nVisit the GitHub page for more information..
        /// </summary>
        internal static string AboutMessage {
            get {
                return ResourceManager.GetString("AboutMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add and select a new tag and tab page..
        /// </summary>
        internal static string AddTagPageTooltip {
            get {
                return ResourceManager.GetString("AddTagPageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action will clear your current tag list. Do you want to continue?.
        /// </summary>
        internal static string ClearAllCurrentTagsInListMessage {
            get {
                return ResourceManager.GetString("ClearAllCurrentTagsInListMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select a valid metadata type from the dropdown list..
        /// </summary>
        internal static string ComboBoxTagSelectNotValidMessage {
            get {
                return ResourceManager.GetString("ComboBoxTagSelectNotValidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Selection.
        /// </summary>
        internal static string ComboBoxTagSelectNotValidTitle {
            get {
                return ResourceManager.GetString("ComboBoxTagSelectNotValidTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to csv.
        /// </summary>
        internal static string CsvDefaultExt {
            get {
                return ResourceManager.GetString("CsvDefaultExt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a CSV file.
        /// </summary>
        internal static string CsvDialogTitle {
            get {
                return ResourceManager.GetString("CsvDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tags successfully exported to the CSV file..
        /// </summary>
        internal static string CsvExportSuccessMessage {
            get {
                return ResourceManager.GetString("CsvExportSuccessMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CSV files (*.csv)|*.csv.
        /// </summary>
        internal static string CsvFileFilter {
            get {
                return ResourceManager.GetString("CsvFileFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CSV import has been canceled..
        /// </summary>
        internal static string CsvImportCancelMessage {
            get {
                return ResourceManager.GetString("CsvImportCancelMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No tags found to import..
        /// </summary>
        internal static string CsvImportNoTagsFoundMessage {
            get {
                return ResourceManager.GetString("CsvImportNoTagsFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tags imported successfully..
        /// </summary>
        internal static string CsvImportTagImportSuccessfulMessage {
            get {
                return ResourceManager.GetString("CsvImportTagImportSuccessfulMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: This action will replace all existing entries of this tag. Do you want to continue with the CSV import?.
        /// </summary>
        internal static string CsvImportWarningReplaceMessage {
            get {
                return ResourceManager.GetString("CsvImportWarningReplaceMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter a new tag..
        /// </summary>
        internal static string EnterTagMessagePlaceholder {
            get {
                return ResourceManager.GetString("EnterTagMessagePlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://github.com/kn9ff/musicbee-tags-panel.
        /// </summary>
        internal static string GitHubLinkSettings {
            get {
                return ResourceManager.GetString("GitHubLinkSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information.
        /// </summary>
        internal static string InformationTitle {
            get {
                return ResourceManager.GetString("InformationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No metadata types available. Please add metadata types using the &apos;Add Metadata Type&apos; button..
        /// </summary>
        internal static string NoMetaDataTypesMessage {
            get {
                return ResourceManager.GetString("NoMetaDataTypesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please add a tag in the settings dialog..
        /// </summary>
        internal static string PleaseAddTagsInSettingsMessage {
            get {
                return ResourceManager.GetString("PleaseAddTagsInSettingsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to kn9ff &amp; The Two Anonymous Programmers.
        /// </summary>
        internal static string PluginAuthorPluginInfo {
            get {
                return ResourceManager.GetString("PluginAuthorPluginInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates a dockable panel with user-defined tabbed pages that let the user choose tags from user-defined lists..
        /// </summary>
        internal static string PluginDescriptionPluginInfo {
            get {
                return ResourceManager.GetString("PluginDescriptionPluginInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tags-Panel.
        /// </summary>
        internal static string PluginNamePluginInfo {
            get {
                return ResourceManager.GetString("PluginNamePluginInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tags-Panel.
        /// </summary>
        internal static string PluginTargetApplicationPluginInfo {
            get {
                return ResourceManager.GetString("PluginTargetApplicationPluginInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search for a tag....
        /// </summary>
        internal static string SearchTagMessagePlaceholder {
            get {
                return ResourceManager.GetString("SearchTagMessagePlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mb_tags-panel.settings.json.
        /// </summary>
        internal static string SettingsFileName {
            get {
                return ResourceManager.GetString("SettingsFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tag field cannot be empty..
        /// </summary>
        internal static string TagInputBoxEmptyMessage {
            get {
                return ResourceManager.GetString("TagInputBoxEmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This tag is already in the list..
        /// </summary>
        internal static string TagListAddDuplicateTagMessage {
            get {
                return ResourceManager.GetString("TagListAddDuplicateTagMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action will remove the current tag page and you will lose your current tag list. Do you want to continue?.
        /// </summary>
        internal static string TagListRemoveTagPageWarning {
            get {
                return ResourceManager.GetString("TagListRemoveTagPageWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to sort the tags alphabetically? Your current order will be lost..
        /// </summary>
        internal static string TagListSortConfirmationMessage {
            get {
                return ResourceManager.GetString("TagListSortConfirmationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This tag already exists..
        /// </summary>
        internal static string TagListTagAlreadyExistsMessage {
            get {
                return ResourceManager.GetString("TagListTagAlreadyExistsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, the tags will always be sorted alphabetically. Otherwise, you can use the up and down buttons to reorder your tag lists..
        /// </summary>
        internal static string TagSortTooltip {
            get {
                return ResourceManager.GetString("TagSortTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        internal static string WarningTitle {
            get {
                return ResourceManager.GetString("WarningTitle", resourceCulture);
            }
        }
    }
}
