//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MusicBeePlugin {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MusicBeePlugin.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will clear your current tag list. Continue? ähnelt.
        /// </summary>
        internal static string ClearAllCurrentTagsInLIstMessage {
            get {
                return ResourceManager.GetString("ClearAllCurrentTagsInLIstMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die csv ähnelt.
        /// </summary>
        internal static string CsvDefaultExt {
            get {
                return ResourceManager.GetString("CsvDefaultExt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose a CSV file ähnelt.
        /// </summary>
        internal static string CsvDialogTitle {
            get {
                return ResourceManager.GetString("CsvDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tags succesfully exported in CSV file ähnelt.
        /// </summary>
        internal static string CsvExportSuccessMessage {
            get {
                return ResourceManager.GetString("CsvExportSuccessMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die csv files (*.csv)|*.csv ähnelt.
        /// </summary>
        internal static string CsvFileFilter {
            get {
                return ResourceManager.GetString("CsvFileFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CSV import canceled ähnelt.
        /// </summary>
        internal static string CsvImportCancelMessage {
            get {
                return ResourceManager.GetString("CsvImportCancelMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No _availableMetaTags found to import. ähnelt.
        /// </summary>
        internal static string CsvImportNoTagsFoundMessage {
            get {
                return ResourceManager.GetString("CsvImportNoTagsFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tags imported successfully ähnelt.
        /// </summary>
        internal static string CsvImportTagImportSuccesfullMessage {
            get {
                return ResourceManager.GetString("CsvImportTagImportSuccesfullMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning: This will replace all entries of this tag. Do you want to continue with the CSV import? ähnelt.
        /// </summary>
        internal static string CsvImportWarningReplaceMessage {
            get {
                return ResourceManager.GetString("CsvImportWarningReplaceMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please enter a tag ähnelt.
        /// </summary>
        internal static string EnterTagMessagePlaceholder {
            get {
                return ResourceManager.GetString("EnterTagMessagePlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tag cannot be empty. ähnelt.
        /// </summary>
        internal static string TagInputBoxEmptyMessage {
            get {
                return ResourceManager.GetString("TagInputBoxEmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tag is already in the list! ähnelt.
        /// </summary>
        internal static string TagListAddDuplicateTagMessage {
            get {
                return ResourceManager.GetString("TagListAddDuplicateTagMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you really want to sort the _availableMetaTags alphabetically? Your current order will be lost! ähnelt.
        /// </summary>
        internal static string TagListSortConfirmationMessage {
            get {
                return ResourceManager.GetString("TagListSortConfirmationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If enabled, the _availableMetaTags will always be _isAlphabeticallySorted alphabetically in the tag. Otherwise, you can use the up and down buttons to reorder your tag lists. ähnelt.
        /// </summary>
        internal static string TagSortTooltip {
            get {
                return ResourceManager.GetString("TagSortTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning! ähnelt.
        /// </summary>
        internal static string WarningTitle {
            get {
                return ResourceManager.GetString("WarningTitle", resourceCulture);
            }
        }
    }
}
